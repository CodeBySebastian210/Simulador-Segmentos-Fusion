/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lenovo
 */
import java.util.ArrayList;
import java.util.Random;
import java.util.Collections;

public class FrmSegmentosFusion extends javax.swing.JFrame {
    private ArrayList<Integer> listaNumeros = new ArrayList<>();
    private ArrayList<ArrayList<Integer>> segmentos = new ArrayList<>();
    
    private ArrayList<Integer> fusionarCorridas(ArrayList<Integer> a, ArrayList<Integer> b) {
        ArrayList<Integer> resultado = new ArrayList<>();
        int i = 0, j = 0;
        while (i < a.size() && j < b.size()) {
            if (a.get(i) <= b.get(j)) {
                resultado.add(a.get(i++));
            } else {
                resultado.add(b.get(j++));
            }
        }
        while (i < a.size()) resultado.add(a.get(i++));
        while (j < b.size()) resultado.add(b.get(j++));
        return resultado;
    }
    /**
     * Creates new form FrmSegmentosFusion
     */
    public FrmSegmentosFusion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCargar = new javax.swing.JButton();
        btnDividir = new javax.swing.JButton();
        btnFusionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtProceso = new javax.swing.JTextArea();
        btnEquilibrada = new javax.swing.JButton();
        btnPolifasico = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Simulador de Ordenación Externa por Segmentos");

        btnCargar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCargar.setText("Cargar números aleatorios");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        btnDividir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDividir.setText("Dividir en segmentos");
        btnDividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDividirActionPerformed(evt);
            }
        });

        btnFusionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnFusionar.setText("Ordenar y fusionar segmentos");
        btnFusionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFusionarActionPerformed(evt);
            }
        });

        txtProceso.setEditable(false);
        txtProceso.setColumns(20);
        txtProceso.setRows(5);
        jScrollPane1.setViewportView(txtProceso);

        btnEquilibrada.setText("Mezcla Equilibrada Múltiple");
        btnEquilibrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEquilibradaActionPerformed(evt);
            }
        });

        btnPolifasico.setText("Método Polifásico");
        btnPolifasico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPolifasicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(161, 161, 161))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDividir, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnFusionar)
                        .addGap(41, 41, 41)
                        .addComponent(btnEquilibrada)
                        .addGap(67, 67, 67)
                        .addComponent(btnPolifasico)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargar)
                    .addComponent(btnDividir))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFusionar)
                    .addComponent(btnEquilibrada)
                    .addComponent(btnPolifasico))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        // TODO add your handling code here:
        listaNumeros.clear();  
        segmentos.clear();     
        Random random = new Random();

        for (int i = 0; i < 20; i++) {
            listaNumeros.add(random.nextInt(100) + 1);
        }

        txtProceso.setText("Lista original:\n" + listaNumeros.toString() + "\n");
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnDividirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDividirActionPerformed
        // TODO add your handling code here:
        if (listaNumeros.isEmpty()) {
            txtProceso.setText("Primero cargue los números aleatorios.\n");
            return;
        }

        segmentos.clear();  

        int tamSegmento = 5; 
        for (int i = 0; i < listaNumeros.size(); i += tamSegmento) {
            int fin = Math.min(i + tamSegmento, listaNumeros.size());
            ArrayList<Integer> sublista = new ArrayList<>(listaNumeros.subList(i, fin));
            segmentos.add(sublista);
        }

        txtProceso.append("\nSegmentos creados (tamaño 5):\n");
        for (ArrayList<Integer> seg : segmentos) {
            txtProceso.append(seg.toString() + "\n");
        }
    }//GEN-LAST:event_btnDividirActionPerformed

    private void btnFusionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFusionarActionPerformed
        // TODO add your handling code here:
        if (segmentos.isEmpty()) {
            txtProceso.setText("Primero divida en segmentos.\n");
            return;
        }

        txtProceso.append("\nSegmentos ordenados:\n");

        for (ArrayList<Integer> seg : segmentos) {
            Collections.sort(seg);
            txtProceso.append(seg.toString() + "\n");
        }

        ArrayList<Integer> listaFinal = new ArrayList<>();
        for (ArrayList<Integer> seg : segmentos) {
            listaFinal.addAll(seg);
        }

        Collections.sort(listaFinal);

        txtProceso.append("\nLista ordenada final:\n" + listaFinal.toString() + "\n");
    }//GEN-LAST:event_btnFusionarActionPerformed

    private void btnEquilibradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEquilibradaActionPerformed
        // TODO add your handling code here:
        if (segmentos.isEmpty()) {
            txtProceso.setText("Primero divida en segmentos.\n");
            return;
        }

        txtProceso.append("\n--- Mezcla Equilibrada Múltiple ---\n");

        ArrayList<ArrayList<Integer>> seleccionados = new ArrayList<>();
        for (int i = 0; i < Math.min(3, segmentos.size()); i++) {
            ArrayList<Integer> copia = new ArrayList<>(segmentos.get(i));
            Collections.sort(copia);
            txtProceso.append("Segmento ordenado: " + copia + "\n");
            seleccionados.add(copia);
        }

        ArrayList<Integer> resultado = new ArrayList<>();
        for (ArrayList<Integer> seg : seleccionados) {
            resultado.addAll(seg);
        }
        Collections.sort(resultado);

        txtProceso.append("Resultado final (Equilibrada Múltiple):\n" + resultado + "\n");
    }//GEN-LAST:event_btnEquilibradaActionPerformed

    private void btnPolifasicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPolifasicoActionPerformed
        // TODO add your handling code here:
        if (listaNumeros.isEmpty()) {
            txtProceso.setText("Primero genere la lista.\n");
            return;
        }

        txtProceso.append("\n--- Método Polifásico ---\n");

        ArrayList<ArrayList<Integer>> runs = new ArrayList<>();
        int i = 0;

        while (i < listaNumeros.size()) {
            int tamCorrida = Math.min((i % 5) + 3, listaNumeros.size() - i);
            ArrayList<Integer> corrida = new ArrayList<>(listaNumeros.subList(i, i + tamCorrida));
            Collections.sort(corrida);
            runs.add(corrida);
            txtProceso.append("Corrida creada: " + corrida + "\n");
            i += tamCorrida;
        }

        while (runs.size() > 1) {
            ArrayList<Integer> a = runs.remove(0);
            ArrayList<Integer> b = runs.remove(0);
            ArrayList<Integer> fusion = fusionarCorridas(a, b);
            txtProceso.append("Fusionando: " + a + " + " + b + " => " + fusion + "\n");
            runs.add(fusion);
        }

        txtProceso.append("Resultado final (Polifásico):\n" + runs.get(0) + "\n");
    }//GEN-LAST:event_btnPolifasicoActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSegmentosFusion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSegmentosFusion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSegmentosFusion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSegmentosFusion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmSegmentosFusion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnDividir;
    private javax.swing.JButton btnEquilibrada;
    private javax.swing.JButton btnFusionar;
    private javax.swing.JButton btnPolifasico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtProceso;
    // End of variables declaration//GEN-END:variables
}
